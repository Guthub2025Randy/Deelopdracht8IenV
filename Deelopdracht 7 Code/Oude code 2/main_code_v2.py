# -*- coding: utf-8 -*-
"""Main_code_v2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZyjKlr5aoMLQDyRPQ5u5HsU87L0igy8f
"""

from bibliotheek import *
from lcg_tcg_vcg_Deelopdracht_7 import locatie_interpoleren
from input_code_v2 import *
from VullingT1functie import Vulling1
from VullingT2functie_v2 import VullingT2
from lcg_tank2_v2 import lcg_tank2
from Momentensom1functie_v2 import Momentensom1
from Krachtensom1functie_v2 import Krachtensom1
from moment_functie_v2 import moment
from posities_en_krachten_lijsten_v2 import positiesmetkrachtenlijst1, positiesmetkrachtenlijst2
from Kraanfunctie_krachten_en_posities_v2 import Kraanfunctie
from Traagheidsmomenten_Ballasttanks_Functie_v2 import traagheidsmomenten_ballasttanks
from Zwaartepunt_schip_functie_v2 import Zwaartepuntschip
from G_M_Functie_v2 import G_M
from opdrijvende_kracht_v2 import *
from momenten_krachtensom2functie_v2 import *
from remove_buoyancy_functie_v2 import remove_buoyant_force
from output_1 import output_1
from output_kraan import output_kraan
#Tank 3: er wordt een waarde gekozen voor het volume van tank 3. Vervolgens wordt hiervan het gewicht en
#de het zwaartepunt bepaald
T3Volumevariatie = d3["vol_3"][4]-200
T3Kracht = T3Volumevariatie*Weight_water
locatie_tank3 = locatie_interpoleren(d3, T3Volumevariatie, 3)
#Tank 1: om de vulling van tank 1 te bepalen worden alle momenten bij elkaar opgeteld. Eerst worden er lijsten
#met de gewichten en aangrijpingspunten van de zwaartekrachten van alle massa's opgesteld met behulp van de
#functie "positiesmetkrachtenlijst2". Vervolgens worden alle momenten bij elkaar opgeteld met de functie
#"momentensom1". Voor meer informatie over deze functies, zie de docstrings in de functiebestanden.
Krachten, Posities = positiesmetkrachtenlijst2(dbh1, locatie_tank3, T3Kracht, H, COB, Weight_staal,
                                               Transom_BHD_Thickness, kraan_lcg, SWLMax, dha, Rest_Thickness,
                                               opdrijvende_kracht(Weight_water, Buoyant_volume))
Momentensom1 = Momentensom1(Posities,Krachten)
#Tank 1: op basis van het berekende transversale moment wordt de vulling en gewicht van de vulling van het water
#in tank 1 bepaald.
vullingt1 = Vulling1(Momentensom1, d1["inertia_1"], d1["vol_1"][:7])
T1Kracht = vullingt1*Weight_water
locatie_tank1 = locatie_interpoleren(d1, vullingt1, 1)
#Tank 2: om het nieuwe krachtevenwicht en het longitudinale momentevenwicht te bepalen moeten
#het gewicht en zwaartepunt van het water in tank 1 worden toegevoegd aan de lijsten met krachten en posities.
#Dit wordt gedaan met de functie "positiemetkrachtenlijst1". Op basis van deze lijsten wordt de vulling en
#het gewicht van tank 2 bepaald.
Krachten2, Posities2 = positiesmetkrachtenlijst1(dbh, locatie_tank1, T1Kracht, locatie_tank3, T3Kracht, H, COB,
                                                 Weight_staal, Transom_BHD_Thickness, kraan_lcg, SWLMax, dha,
                                                 Rest_Thickness, opdrijvende_kracht(Weight_water, Buoyant_volume))
krachtensom_input = Krachten2
Krachtensom = Krachtensom1(krachtensom_input)
vullingT2 = VullingT2(Krachtensom)[0]
KrachtT2 = vullingT2*Weight_water
#Tank 2: voor het longitudinale evenwicht is er een nieuwe momentensom nodig, waar wel de vulling van tank 1
#is inbegrepen maar niet de tankschotten van tank 2. De functie momentensom2 voegt de momenten veroorzaakt
#door de vulling van tank 1 toe aan de eerdere momentensom. Vervolgens wordt de ligging van het zwaartepunt
#van tank 2 bepaald.
TweedeMomentensom = momentensom2(Momentensom1, locatie_tank1, T1Kracht)
TweedeKrachtensom = krachtsom2(Krachtensom, dbh2, Transom_BHD_Thickness, Staalgewicht)
vcgt2 = locatie_interpoleren(d2, vullingT2, 2)[2]
positie_tank2 = np.array([lcg_tank2(TweedeMomentensom,TweedeKrachtensom)[0], 0, vcgt2])
#Stabiliteit: met de functie "traagheidsmomenten_ballasttanks" wordt de som van de traagheidsmomenten van de
#vrije vloeistofoppervlakten van de tanks berekend. Voor meer informatie over deze functie, zie de docstring
#in het functiebestand.
SIt = traagheidsmomenten_ballasttanks(d1["inertia_1"], d2["inertia_2"], d3["inertia_3"], d1["vol_1"],
                                      d2["vol_2"], d3["vol_3"], vullingt1, vullingT2, T3Volumevariatie)
#Stabiliteit: om de totale zwaartepunten van het schip te berekenen, moeten het gewicht en zwaartepunt van het water in
#tank 2 worden toegevoegd aan de lijsten met krachten en posities en de opdrijvende kracht en het
#aangrijpingspunt daarvan juist verwijderd. Vervolgens wordt met de G_M functie het GM bepaald.
Krachten2.append(-KrachtT2)
Posities2.append(positie_tank2)
Posities3, Krachten3 = remove_buoyant_force(Posities2, Krachten2, COB, opdrijvende_kracht(Weight_water, Buoyant_volume))
lcg_schip, tcg_schip, vcg_schip = Zwaartepuntschip(Posities3, Krachten3)
G_M_a = G_M(Buoyant_volume, SIt, vcg_schip, COB[2], It)
print(G_M_a)
output_1(4, str(msp["XYZ location of WEA [m]"]), Rtot_14knp, G_M_a, 20, msp["Loa  [m]"], msp["B [m]"], H, msp["T moulded [m]"], 
         0, 0, Staalgewicht, Waterdichtheid, Krachtensom1(Krachten3)[0], lcg_schip, tcg_schip, vcg_schip, 
         opdrijvende_kracht(Weight_water, Buoyant_volume), COB[0], COB[1], COB[2], 
         Krachtensom1(Krachten3)[0]+opdrijvende_kracht(Weight_water, Buoyant_volume), (Krachtensom1(Krachten3)[0]*(lcg_schip-COB[0])), 
         (Krachtensom1(Krachten3)[0]*(tcg_schip-COB[1])), 4, -Gewicht_transition_piece*g*Staalgewicht, lcg_tp, tcg_tp, vcg_tp)
output_kraan(SWLMax, -Gewicht_transition_piece*g*Staalgewicht, lengte_kraan_fundatie, Draaihoogte_kraan, jib_length, Zwenkhoek, 
             Giekhoek, LCG_TP, TCG_TP, VCG_TP, LCG_kraanhuis, TCG_kraanhuis, VCG_kraanhuis, LCG_kraanboom, TCG_kraanboom, 
             VCG_kraanboom, LCG_heisgerei, TCG_heisgerei, VCG_heisgerei)