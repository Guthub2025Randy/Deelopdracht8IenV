def parabolischProfielKraan(zwaartepunt_tp, totaal_kracht, lengte_in_cm):
    """
    Nog te bepalen: straal kraanhuis als argument, lokale variabele bepaald binnen de functie of global variable.

    De functie bepaalt de verdeelde belasting van de kraan op het dek tijdens de hijsoperatie (dus inclusief een tussenstuk in de kraan)
    Imputs:
    zwaartepunt_tp: x-coördinaat van het aangrijpingspunt van het gewicht van het kraanhuis op het dek (float)
    totaal_kracht: het totale gewicht van de kraan en kraanlast samen (float)
    lengte_in_cm: een array van x-coördinaten voor elke centimeter van het schip. Deze array heeft dus 14901 elementen en loopt van -9 tot 140.
    Returns:
    kracht: een array met de verdeelde belasting op het dek ten gevolge van de kraan op elke centimeter van het schip. Deze array heeft dus 14901 elementen.
    """
    start = lengte_in_cm[0]
    eind = lengte_in_cm[-1]
    begin = max(zwaartepunt_tp - straal_kraanhuis, start)
    eind = min(zwaartepunt_tp + straal_kraanhuis, eind)
    #conversion to distance from stern instead of from achterloodlijn
    idx_begin = int((begin - start))
    idx_eind = int((eind - start))

    bereik = np.arange(idx_begin, idx_eind + 0.01, 0.01)
    print((bereik))

    afstanden = (bereik + start) - zwaartepunt_tp
    x_norm = afstanden / straal_kraanhuis
    print(x_norm)

    profiel = np.clip(1 - x_norm**2, 0, None)
    profiel /= profiel.sum()
    profiel *= totaal_kracht
    kracht = np.zeros(len(lengte_in_cm))
    for i in range(len(bereik)):
      kracht[int(bereik[0]*100)+i] = profiel[i]
    return kracht